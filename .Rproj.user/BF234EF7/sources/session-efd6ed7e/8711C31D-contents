#' Paired box plot.
#'
#' Optionally, an P value of Wilcox rank-sum test can be added.
#'
#' @param df A data.frame of plot data.
#' @param x A string of the column name for x.
#' @param y A string of the column name for y.
#' @param color A string of the column name for color.
#' @param facet (Optional) A string or a pair of strings of the column name(s) for facet.
#' @param colors (Optional) A vector of colors.
#' @param ylab A string for y-axis label.
#' @param yscale The y-axis scale. Can be either "continuous" or "log10".
#' @param facet_type The facetting type. Can be either "wrap" or "grid".
#' @param facet_scales The facetting scales.
#' @param facet_space The spacing scheme in the facetting grid.
#' @param facet_ncol Number of columns.
#' @param facet_nrow Number of rows.
#' @export
#' @rdname ggPairedBoxPlot
#' @name ggPairedBoxPlot
ggPairedBoxPlot <- function(
  df,
  x,
  y,
  color,
  facet=NULL,
  colors=NULL,
  ylab="Y",
  yscale="continuous",
  facet_type="wrap",
  facet_scales="free_y",
  facet_space="fixed",
  facet_ncol=NULL,
  facet_nrow=NULL
){
  # Format data
  df_sub <- data.frame("X"=df[[x]], "Y"=df[[y]], "Color"=df[[color]])
  if(is.null(facet)){
    df_sub$"Facet" <- ""
    df <- df_sub
  }else{
    if(length(facet)==1){
      df_sub$"Facet" <- df[[facet]]
      df <- df_sub
    }
    if(length(facet)==2){
      df_sub$"Facet1" <- df[[facet[1]]]
      df_sub$"Facet2" <- df[[facet[2]]]
      df <- df_sub
    }
  }

  # Plot
  set.seed(12345)
  plt <- ggpubr::ggpaired(
    df, x="X", y="Y", color="Color",
    line.color="gray", line.size=0.4,
    palette="npg"
  ) +
    guides(color=guide_legend(nrow=1))
  if(!is.null(colors)){
    plt <- plt +
      scale_color_manual(values=alpha(colors, 0.5))
  }else{
    plt <- plt +
      viridis::scale_color_viridis(option="cividis")
  }

  # Facet
  if(!is.null(facet)){
    if(facet_type=="wrap"){
      if(length(facet)==1) f <- c("Facet")
      if(length(facet)==2) f <- c("Facet1","Facet2")
      plt <- plt + ggh4x::facet_wrap2(
        facets=f, scales=facet_scales,
        ncol=facet_ncol, nrow=facet_nrow,
        axes="all"
      )
    }
    if(facet_type=="grid"){
      if(length(facet)==1){
        plt <- plt + ggh4x::facet_grid2(
          rows="Facet",
          scales=facet_scales,
          space=facet_space, axes="all"
        )
      }
      if(length(facet)==2){
        plt <- plt + ggh4x::facet_grid2(
          rows="Facet1", cols="Facet2",
          scales=facet_scales,
          space=facet_space, axes="all"
        )
      }
    }
  }

  # Scale
  if(yscale=="log10"){
    plt <- plt + scale_y_log10(
      name=ylab,
      breaks=scales::log_breaks(),
      labels=prettyNum,
      expand=expansion(mult=c(0, 0.1))
    )
  }else{
    plt <- plt + scale_y_continuous(
      name=ylab,
      expand=expansion(mult=c(0, .1))
    ) +
      geom_hline(yintercept=0, linetype="dashed")
  }

  # Aethetics
  plt <- plt +
    xlab(NULL) +
    ggpubr::theme_pubr(14) +
    theme(legend.spacing.x=unit(0.15, 'cm'),
          panel.grid.major=element_blank(),
          panel.grid.minor=element_blank(),
          strip.background=element_blank(),
          strip.text=element_text(size=14)) +
    ggpubr::rremove("legend.title")
  return(plt)
}
